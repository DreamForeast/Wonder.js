open StateDataMainType;

let createState = () => {
  settingRecord: RecordSettingService.create(),
  jobRecord: RecordJobService.create(),
  noWorkerJobRecord: None,
  workerJobRecord: None,
  renderConfigRecord: None,
  gpuDetectRecord: RecordAllGPUDetectService.create(),
  viewRecord: RecordViewService.create(),
  sourceInstanceRecord: None,
  objectInstanceRecord: RecordObjectInstanceService.create(),
  deviceManagerRecord: RecordAllDeviceManagerService.create(),
  gameObjectRecord: RecordGameObjectService.create(),
  transformRecord: None,
  sceneRecord: None,
  basicCameraViewRecord: RecordBasicCameraViewService.create(),
  perspectiveCameraProjectionRecord:
    RecordPerspectiveCameraProjectionService.create(),
  arcballCameraControllerRecord: RecordArcballCameraControllerService.create(),
  flyCameraControllerRecord: RecordFlyCameraControllerService.create(),
  basicMaterialRecord: None,
  lightMaterialRecord: None,
  sourceTextureRecord: None,
  basicSourceTextureRecord: None,
  arrayBufferViewSourceTextureRecord: None,
  cubemapTextureRecord: None,
  directionLightRecord: None,
  pointLightRecord: None,
  geometryRecord: None,
  meshRendererRecord: None,
  scriptRecord: RecordScriptMainService.create(),
  shaderRecord: RecordAllShaderService.create(),
  glslRecord: RecordAllGLSLService.create(),
  programRecord: RecordAllProgramService.create(),
  glslLocationRecord: RecordAllGLSLLocationService.create(),
  glslSenderRecord: RecordGLSLSenderAllService.create(),
  glslChunkRecord: ShaderChunkSystem.create(),
  renderRecord: None,
  timeControllerRecord: RecordTimeControllerService.create(),
  vboBufferRecord: RecordVboBufferService.create(),
  globalTempRecord: RecordAllGlobalTempService.create(),
  typeArrayPoolRecord: RecordTypeArrayPoolService.create(),
  workerInstanceRecord: RecordWorkerInstanceService.create(),
  workerDataRecord: RecordWorkerDataService.create(),
  workerDetectRecord: RecordWorkerDetectService.create(),
  browserDetectRecord: RecordAllBrowserDetectService.create(),
  eventRecord: RecordEventMainService.create(),
  imguiRecord: RecordIMGUIMainService.create(),
  apiRecord: RecordAPIMainService.create(),
  jobDataRecord: RecordAllJobDataService.create(),
  assetBundleRecord: RecordAssetBundleMainService.create(),
  loadRecord: RecordLoadMainService.create(),
};
