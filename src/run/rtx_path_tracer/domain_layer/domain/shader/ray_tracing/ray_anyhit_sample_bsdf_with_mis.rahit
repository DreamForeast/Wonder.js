#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_scalar_block_layout : enable
#pragma shader_stage(anyhit)

#include "../common/utils.glsl"

#include "get_surfaceInteraction_data.glsl"

layout(location = 2)
    rayPayloadInEXT SampleBSDFWithMISHitPayload sampleBSDFWithMISHitPayload;

void main() {
  uint instanceIndex = gl_InstanceID;
  uint primitiveIndex = gl_PrimitiveID;

  Vertex v0;
  Vertex v1;
  Vertex v2;

  getVertices(instanceIndex, primitiveIndex, v0, v1, v2);

  BSDFMaterial mat = getMaterial(instanceIndex);

  vec2 uv = getUV(v0, v1, v2);

  if (isTransmission(mat, uv)) {
    ignoreIntersectionEXT();
  } else {
    sampleBSDFWithMISHitPayload.lightIndex = mat.materialLightIndexOfAreaLight;
    sampleBSDFWithMISHitPayload.lightType = mat.materialLightTypeOfAreaLight;

    terminateRayEXT();
  }
}